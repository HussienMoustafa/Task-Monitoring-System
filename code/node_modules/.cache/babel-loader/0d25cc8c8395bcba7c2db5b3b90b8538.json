{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ah/Desktop/react/a2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const id_uuid = uuidv4();\n    console.log(id_uuid);\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: id_uuid,\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = '';\n  }\n\n  function handleClearTodos(e) {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \" Add Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearTodos,\n      children: \" Clear Completed Todos \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", todos.filter(todo => !todo.complete).length, \"left to do \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 46\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ah/Desktop/react/a2/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","v4","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","id_uuid","console","log","name","current","value","prevTodos","handleClearTodos","filter","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,MAFJ,EAGIC,SAHJ,QAIO,OAJP;AAKA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,EAAE,IAAIC,MADV,QAEO,MAFP;AAIA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,WAAW,GAAGT,MAAM,EAA1B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAApB;AACA,QAAIK,WAAJ,EAAiBF,QAAQ,CAACE,WAAD,CAAR;AACpB,GAHQ,EAGN,EAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,YAAY,CAACE,OAAb,CAAqBV,iBAArB,EAAwCM,IAAI,CAACK,SAAL,CAAeT,KAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAKA,WAASU,UAAT,CAAoBC,EAApB,EAAwB;AACpB,UAAMC,QAAQ,GAAG,CAAC,GAAGZ,KAAJ,CAAjB;AACA,UAAMa,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAb;AACAE,IAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACAd,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACH;;AAED,WAASI,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,UAAMC,OAAO,GAAGrB,MAAM,EAAtB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,IAAI,GAAGnB,WAAW,CAACoB,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBpB,IAAAA,QAAQ,CAACuB,SAAS,IAAI;AAClB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAClBb,QAAAA,EAAE,EAAEO,OADc;AAElBG,QAAAA,IAAI,EAAEA,IAFY;AAGlBN,QAAAA,QAAQ,EAAE;AAHQ,OAAf,CAAP;AAKH,KANO,CAAR;AAOAb,IAAAA,WAAW,CAACoB,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH;;AAED,WAASE,gBAAT,CAA0BR,CAA1B,EAA6B;AACzB,UAAML,QAAQ,GAAGZ,KAAK,CAAC0B,MAAN,CAAab,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,CAAjB;AACAd,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACH;;AAED,sBAAS;AAAA,4BAEL,QACA,QADA;AACS,MAAA,KAAK,EACVZ,KAFJ;AAIA,MAAA,UAAU,EACNU;AALJ;AAAA;AAAA;AAAA;AAAA,YAFK,oBASF;AACG,MAAA,GAAG,EACLR,WAFD;AAIH,MAAA,IAAI,EAAG;AAJJ;AAAA;AAAA;AAAA;AAAA,YATE,eAcL;AACO,MAAA,OAAO,EACVc,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdK,oBAiBmB;AACjB,MAAA,OAAO,EACVS,gBAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBnB,oBAoBgC;AAAA,sBAEjCzB,KAAK,CAAC0B,MAAN,CAAab,IAAI,IAAI,CAACA,IAAI,CAACE,QAA3B,EAAqCY,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBhC;AAAA,kBAAT;AA2BH;;GArEQ5B,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["import React, {\n    useState,\n    useRef,\n    useEffect\n} from 'react';\nimport TodoList from './TodoList'\nimport {\n    v4 as uuidv4\n} from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n    const [todos, setTodos] = useState([])\n    const todoNameRef = useRef()\n\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n        if (storedTodos) setTodos(storedTodos)\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n    }, [todos])\n\n\n    function toggleTodo(id) {\n        const newTodos = [...todos]\n        const todo = newTodos.find(todo => todo.id === id)\n        todo.complete = !todo.complete\n        setTodos(newTodos)\n    }\n\n    function handleAddTodo(e) {\n        const id_uuid = uuidv4()\n        console.log(id_uuid)\n        const name = todoNameRef.current.value\n        if (name === '') return\n        setTodos(prevTodos => {\n            return [...prevTodos, {\n                id: id_uuid,\n                name: name,\n                complete: false\n            }]\n        })\n        todoNameRef.current.value = ''\n    }\n\n    function handleClearTodos(e) {\n        const newTodos = todos.filter(todo => !todo.complete)\n        setTodos(newTodos)\n    }\n\n    return ( <\n        >\n        <\n        TodoList todos = {\n            todos\n        }\n        toggleTodo = {\n            toggleTodo\n        }\n        /> <\n        input ref = {\n            todoNameRef\n        }\n        type = \"text\" / >\n        <\n        button onClick = {\n            handleAddTodo\n        } > Add Todo < /button> <\n        button onClick = {\n            handleClearTodos\n        } > Clear Completed Todos < /button> <\n        div > {\n            todos.filter(todo => !todo.complete).length\n        }\n        left to do </div> < /\n            >\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}